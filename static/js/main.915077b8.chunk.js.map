{"version":3,"sources":["components/ComplateTodo.jsx","components/HoryuTodo.jsx","components/IncompleteTodo.jsx","components/InputTodo.jsx","App.js","reportWebVitals.js","index.js"],"names":["CompleteTodo","memo","props","completeTodos","onClickBack","length","splice","className","map","todo","index","onClick","HoryuTodo","horyuTodos","onClickHoryuBack","onClickDeleteHoryu","IncompleteTodo","incompleteTodos","onClickComplete","onClickDelete","onClickMoveHoryu","InputTodo","todoText","onChangeTodoText","onClickAdd","disabled","type","placeholder","value","onChange","App","useState","setTodoText","setIncompleteTodos","setCompleteTodos","setHoryuTodos","event","target","newTodos","style","color","newIncompleteTodos","newCompleteTodos","newHoryuTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEaA,EAAeC,gBAAK,SAACC,GAAW,IAClCC,EAA8BD,EAA9BC,cAAeC,EAAeF,EAAfE,YAItB,OAHGD,EAAcE,OAAS,IACxBF,EAAcG,OAAO,EAAG,GAGtB,sBAAKC,UAAU,gBAAf,UACI,wDACI,6BACGJ,EAAcK,KAAI,SAACC,EAAMC,GACxB,OACE,sBAAgBH,UAAU,WAA1B,UACE,6BAAKE,IACL,wBAAQE,QAAS,kBAAMP,EAAYM,IAAnC,4BAFQD,cCXnBG,EAAYX,gBAAK,SAACC,GAAW,IAC/BW,EAAoDX,EAApDW,WAAYC,EAAwCZ,EAAxCY,iBAAkBC,EAAsBb,EAAtBa,mBACzC,OACI,sBAAKR,UAAU,aAAf,UACY,wDACA,6BACGM,EAAWL,KAAI,SAACC,EAAMC,GACrB,OACE,sBAAgBH,UAAU,WAA1B,UACE,6BAAKE,IACL,wBAAQE,QAAS,kBAAMG,EAAiBJ,IAAxC,sCACA,wBAAQC,QAAS,kBAAMI,EAAmBL,IAA1C,4BAHQD,cCRnBO,EAAiBf,gBAAK,SAACC,GAAW,IACpCe,EAAqEf,EAArEe,gBAAiBC,EAAoDhB,EAApDgB,gBAAiBC,EAAmCjB,EAAnCiB,cAAeC,EAAoBlB,EAApBkB,iBACxD,OACI,sBAAKb,UAAU,kBAAf,UACQ,8DACA,6BACGU,EAAgBT,KAAI,SAACC,EAAMC,GAC1B,OACE,sBAAgBH,UAAU,WAA1B,UACE,6BAAKE,IACL,wBAAQE,QAAS,kBAAMO,EAAgBR,IAAvC,0BACA,wBAAQC,QAAS,kBAAMQ,EAAcT,IAArC,0BACA,wBAAQC,QAAS,kBAAMS,EAAiBV,IAAxC,kCAJQD,cCRnBY,EAAYpB,gBAAK,SAACC,GAAW,IAC/BoB,EAAoDpB,EAApDoB,SAAUC,EAA0CrB,EAA1CqB,iBAAkBC,EAAwBtB,EAAxBsB,WAAYC,EAAYvB,EAAZuB,SAC/C,OACI,sBAAKlB,UAAU,aAAf,UACQ,gEACA,uBAAOmB,KAAK,OAAOC,YAAY,yBAAUC,MAAON,EAAUO,SAAUN,EAAkBE,SAAUA,IAChG,wBAAQd,QAASa,EAAYC,SAAUA,EAAvC,gCC2HDK,G,MA1HI,WAAO,IAAD,EACSC,mBAAS,IADlB,mBAChBT,EADgB,KACNU,EADM,OAEuBD,mBAAS,IAFhC,mBAEhBd,EAFgB,KAECgB,EAFD,OAGmBF,mBAAS,IAH5B,mBAGhB5B,EAHgB,KAGD+B,EAHC,OAIaH,mBAAS,IAJtB,mBAIhBlB,EAJgB,KAIJsB,EAJI,KAuFvB,OACE,qCACA,sBAAK5B,UAAU,eAAf,UACI,mCACI,wDACA,2JAA8B,uBAA9B,2IAC8B,uBAD9B,6GAKJ,iCAEI,cAACc,EAAD,CAAWC,SAAUA,EAAUC,iBA3FhB,SAACa,GAAD,OAAWJ,EAAYI,EAAMC,OAAOT,QA2FgBJ,WAxF1D,WACjB,GAAgB,KAAbF,EAAH,CACA,IAAMgB,EAAQ,sBAAOrB,GAAP,CAAwBK,IACtCW,EAAmBK,GACnBN,EAAY,MAoFuFP,SAAUR,EAAgBZ,QAAU,IAG9HY,EAAgBZ,QAAU,GAAM,mBAAGkC,MAAO,CAAEC,MAAO,OAAnB,gFACjC,cAACxB,EAAD,CAAgBC,gBAAiBA,EAAiBC,gBA3EtC,SAACR,GAEvB,IAAM+B,EAAkB,YAAOxB,GACzByB,EAAgB,sBAAOvC,GAAP,CAAsBc,EAAgBP,KAC5D+B,EAAmBnC,OAAOI,EAAO,GAIjCuB,EAAmBQ,GACnBP,EAAiBQ,IAkE6EvB,cApFxE,SAACT,GACrB,IAAM4B,EAAQ,YAAOrB,GACrBqB,EAAShC,OAAOI,EAAO,GACvBuB,EAAmBK,IAiFuGlB,iBA9DrG,SAACV,GAGxB,IAAM+B,EAAkB,YAAOxB,GACzB0B,EAAa,sBAAO9B,GAAP,CAAmB4B,EAAmB/B,KAEzD+B,EAAmBnC,OAAOI,EAAO,GAGjCyB,EAAcQ,GACdV,EAAmBQ,MAuDT,cAACzC,EAAD,CAAcG,cAAeA,EAAeC,YApDpC,SAACM,GACnB,IAAMgC,EAAgB,YAAOvC,GACvBsC,EAAkB,sBAAOxB,GAAP,CAAwByB,EAAiBhC,KACjEgC,EAAiBpC,OAAOI,EAAO,GAG/BuB,EAAmBQ,GACnBP,EAAiBQ,MAgDP,cAAC9B,EAAD,CAAWC,WAAYA,EAAYC,iBArCtB,SAACJ,GACxB,IAAMiC,EAAa,YAAO9B,GAEpB4B,EAAkB,sBAAOxB,GAAP,CAAwBJ,EAAWH,KAC3DiC,EAAcrC,OAAOI,EAAO,GAE5BuB,EAAmBQ,GACnBN,EAAcQ,IA8BmE5B,mBA5CxD,SAACL,GAC1B,IAAMiC,EAAa,YAAO9B,GAC1B8B,EAAcrC,OAAOI,EAAO,GAC5ByB,EAAcQ,YA+CZ,wBAAQpC,UAAU,SAAlB,uDChHWqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.915077b8.chunk.js","sourcesContent":["import { memo } from \"react\";\n\nexport const CompleteTodo = memo((props) => {\n    const {completeTodos, onClickBack} = props;\n    if(completeTodos.length > 11){\n      completeTodos.splice(0, 1);\n    }\n    return (\n        <div className=\"complete-area\">\n            <h2>完了のTODO</h2>\n                <ul>\n                  {completeTodos.map((todo, index) => {\n                    return (\n                      <div key={todo} className=\"list-row\">\n                        <li>{todo}</li>\n                        <button onClick={() => onClickBack(index)}>戻す</button>\n                    </div>\n                    );\n                  })}\n                </ul>\n        </div>\n    );\n});","import { memo } from \"react\";\n\nexport const HoryuTodo = memo((props) => {\n    const {horyuTodos, onClickHoryuBack, onClickDeleteHoryu} = props;\nreturn (\n    <div className=\"horyu-area\">\n                <h2>保留のTODO</h2>\n                <ul>\n                  {horyuTodos.map((todo, index) => {\n                    return (\n                      <div key={todo} className=\"list-row\">\n                        <li>{todo}</li>\n                        <button onClick={() => onClickHoryuBack(index)}>未完了へ</button>\n                        <button onClick={() => onClickDeleteHoryu(index)}>削除</button>\n                    </div>\n                    )\n                  })}\n                </ul>\n    </div>\n);\n});","import { memo } from \"react\";\n\nexport const IncompleteTodo = memo((props) => {\n    const {incompleteTodos, onClickComplete, onClickDelete, onClickMoveHoryu} = props;\n    return (\n        <div className=\"incomplete-area\">\n                <h2>未完了のTODO</h2>\n                <ul>\n                  {incompleteTodos.map((todo, index) => {\n                    return (\n                      <div key={todo} className=\"list-row\">\n                        <li>{todo}</li>\n                        <button onClick={() => onClickComplete(index)}>完了</button>\n                        <button onClick={() => onClickDelete(index)}>削除</button>\n                        <button onClick={() => onClickMoveHoryu(index)}>保留へ</button>\n                    </div>\n                    );\n                  })}\n                </ul>\n        </div>\n    );\n});","import { memo } from \"react\";\n\nexport const InputTodo = memo((props) => {\n    const {todoText, onChangeTodoText, onClickAdd, disabled} = props;\n    return (\n        <div className=\"input-area\">\n                <h2>入力エリア</h2>\n                <input type=\"text\" placeholder=\"todoを入力\" value={todoText} onChange={onChangeTodoText} disabled={disabled} />\n                <button onClick={onClickAdd} disabled={disabled}>追加</button>\n        </div>\n    );\n});","import React, { useState } from 'react';\nimport { CompleteTodo } from './components/ComplateTodo';\nimport { HoryuTodo } from './components/HoryuTodo';\nimport { IncompleteTodo } from './components/IncompleteTodo';\nimport { InputTodo } from './components/InputTodo';\nimport \"./styles.css\";\n\n\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState(\"\");\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  const [completeTodos, setCompleteTodos] = useState([]);\n  const [horyuTodos, setHoryuTodos] = useState([]);\n\n\n  // インプット追加\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\n\n  // 未完了のTODOへの追加\n  const onClickAdd = () => {\n    if(todoText === \"\") return;\n    const newTodos = [...incompleteTodos, todoText];\n    setIncompleteTodos(newTodos);\n    setTodoText(\"\");\n  } \n\n  //未完了のTODOからの削除\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    newTodos.splice(index, 1);\n    setIncompleteTodos(newTodos);\n  }\n\n\n\n  //未完了のTODOから完了への移動\nconst onClickComplete = (index) => {\n  // 未完了エリアの更新\n  const newIncompleteTodos = [...incompleteTodos];\n  const newCompleteTodos = [...completeTodos, incompleteTodos[index]];\n  newIncompleteTodos.splice(index, 1);\n  \n\n  //セット\n  setIncompleteTodos(newIncompleteTodos);\n  setCompleteTodos(newCompleteTodos);\n}\n\n//保留エリアへ追加\nconst onClickMoveHoryu = (index) => {\n\n  // 未完了エリアの更新\n  const newIncompleteTodos = [...incompleteTodos];\n  const newHoryuTodos = [...horyuTodos, newIncompleteTodos[index]];\n\n  newIncompleteTodos.splice(index, 1);\n\n  //セット\n  setHoryuTodos(newHoryuTodos);\n  setIncompleteTodos(newIncompleteTodos);\n}\n\nconst onClickBack = (index) => {\n  const newCompleteTodos = [...completeTodos];\n  const newIncompleteTodos = [...incompleteTodos, newCompleteTodos[index]];\n  newCompleteTodos.splice(index, 1);\n\n  //セット\n  setIncompleteTodos(newIncompleteTodos);\n  setCompleteTodos(newCompleteTodos);\n}\n\n// 保留から消去\nconst onClickDeleteHoryu = (index) => {\n  const newHoryuTodos = [...horyuTodos];\n  newHoryuTodos.splice(index, 1);\n  setHoryuTodos(newHoryuTodos);\n}\n\n// \nconst onClickHoryuBack = (index) => {\n  const newHoryuTodos = [...horyuTodos];\n\n  const newIncompleteTodos = [...incompleteTodos, horyuTodos[index]];\n  newHoryuTodos.splice(index, 1);\n\n  setIncompleteTodos(newIncompleteTodos);\n  setHoryuTodos(newHoryuTodos);\n}\n\n\n\n\n\n\n  return (\n    <>\n    <div className=\"main-wrapper\">\n        <header>\n            <h1>TODOリスト</h1>\n            <p>入力したTODOは「未完了のTODO」に追加されます。<br />\n                １度に登録できる「未完了のTODO」は５個までです。<br />\n                完了したTODOは１０まで保存されます。\n            </p>\n        </header>\n        <main>\n            {/* インプットエリア */}\n            <InputTodo todoText={todoText} onChangeTodoText={onChangeTodoText} onClickAdd={onClickAdd} disabled={incompleteTodos.length >= 5} />\n\n            {/* 未完了のエリア */}\n            {incompleteTodos.length >= 5 && (<p style={{ color: \"red\" }}>５個まで登録できます。</p>)}\n            <IncompleteTodo incompleteTodos={incompleteTodos} onClickComplete={onClickComplete} onClickDelete={onClickDelete} onClickMoveHoryu={onClickMoveHoryu} />\n\n            {/* 完了エリア */}\n            <CompleteTodo completeTodos={completeTodos} onClickBack={onClickBack} />\n\n            {/* 保留エリア */}\n            <HoryuTodo horyuTodos={horyuTodos} onClickHoryuBack={onClickHoryuBack} onClickDeleteHoryu={onClickDeleteHoryu} />\n        </main>\n    </div>\n\n    \n    \n    <footer className=\"footer\">\n        Copyright taichi All Rights Reserved\n    </footer>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}